version: '3.3'

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=foodgram
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ../backend
    volumes:
      - ../backend/foodgramApi:/app
      - static_volume:/app/static
      - media_volume:/app/media
      - ../data:/app/data
    expose:
      - 8000
    environment:
      - DB_NAME=foodgram
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DJANGO_SETTINGS_MODULE=foodgramApi.settings
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate && 
             python manage.py collectstatic --noinput --clear && 
             python manage.py load_ingredients /app/data/ingredients.json"
    restart: always

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/build:/app/result_build

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
