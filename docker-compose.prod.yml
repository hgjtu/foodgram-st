version: '3.3'

services:
  db:
    image: hgjtu/foodgram-db:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    image: hgjtu/foodgram-backend:latest
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - ./data:/app/data
    expose:
      - 8000
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}  
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      db:
        condition: service_healthy
    restart: always

  frontend:
    image: hgjtu/foodgram-frontend:latest
    volumes:
      - ./frontend/build:/app/result_build

  nginx:
    image: hgjtu/foodgram-nginx:latest
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html
      - ./docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/app/static
      - media_volume:/app/media
    environment:
      - NGINX_HOST=${NGINX_HOST}
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume: 
