name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: foodgram_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-django pytest-cov coverage
        cd backend
        pip install -r requirements.txt
        pip install -e .

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests with coverage
      env:
        DB_NAME: foodgram_test
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_HOST: localhost
        DB_PORT: 5432
        DJANGO_SETTINGS_MODULE: foodgramApi.settings
        SECRET_KEY: test_key
        DEBUG: False
        PYTHONPATH: ${{ github.workspace }}/backend
      run: |
        cd backend/foodgramApi
        coverage run --source='.' manage.py test
        coverage report
        coverage html
        echo "Coverage report generated in htmlcov/index.html"

  verify-images:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Pull and verify images
      run: |
        # Проверяем доступность образов
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/foodgram-backend:latest
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/foodgram-frontend:latest
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/foodgram-nginx:latest
        docker pull postgres:14

        # Проверяем, что образы успешно загружены
        docker images | grep foodgram
        docker images | grep postgres

  notify:
    needs: [test, verify-images]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: html
          message: |
            <b>Foodgram CI/CD Status</b>
            
            <b>Event:</b> ${{ github.event_name }}
            <b>Branch:</b> ${{ github.ref }}
            <b>Commit:</b> ${{ github.sha }}
            <b>Author:</b> ${{ github.actor }}
            
            <b>Test Status:</b> ${{ needs.test.result }}
            <b>Images Status:</b> ${{ needs.verify-images.result }}
            
            <b>Details:</b>
            <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Run</a> 